apiVersion: v1
kind: Secret
metadata:
  name: default.service-account-token
  annotations:
    kubernetes.io/service-account.name: default
type: kubernetes.io/service-account-token

---

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: agent
rules:
  - apiGroups:
      - argoproj.io
    resources:
      - workflowtasksets
    verbs:
      - list
      - watch
  - apiGroups:
      - argoproj.io
    resources:
      - workflowtasksets/status
    verbs:
      - patch
  - apiGroups:
      - external-secrets.io
    resources:
      - externalsecrets
    verbs: ["*"]
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs: ["*"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: agent-default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: agent
subjects:
  - kind: ServiceAccount
    name: default

---

apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  name: color-validation
  annotations:
     argocd.argoproj.io/hook: PostSync
spec:
  entrypoint: main
  serviceAccountName: default
  ttlStrategy:
    secondsAfterCompletion: 300
  templates:
  - name: main
    steps:
      - - name: create-color-external-secret
          template: create-color-external-secret
      - - name: get-color-secret
          template: get-color-secret

  - name: create-color-external-secret
    resource:
      action: create
      setOwnerReference: true
      successCondition: status.conditions.0.status == True
      # failureCondition: status.conditions.0.status == True
      manifest: |
        apiVersion: external-secrets.io/v1beta1
        kind: ExternalSecret
        metadata:
          name: color-test
        spec:
          refreshInterval: 5s
          secretStoreRef:
            kind: ClusterSecretStore
            name: gcp
          target:
            name: color-test
            creationPolicy: Owner
          data:
          - secretKey: COLOR
            remoteRef:
              key: COLOR
  - name: get-color-secret
    outputs:
      parameters:
      - name: color
        valueFrom:
          jsonPath: '{.data.COLOR}'
    resource:
      action: get
      manifest: |
        apiVersion: v1
        kind: Secret
        metadata:
          name: color-test